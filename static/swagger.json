{
  "openapi": "3.0.3",
  "info": {
    "title": "API Documentation Field Reservation System",
    "description": "by Rofif Fairuz Hawary\n\nLast Updated: 28/02/2024 04:04:10",
    "contact": {
      "email": "rofifhawary@gmail.com"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Github repository of this project",
    "url": "https://github.com/fairofif/sport_fields_reservation_api"
  },
  "servers": [
    {
      "url": "http://localhost:5000/"
    }
  ],
  "tags": [
    {
      "name": "device",
      "description": "Everything about device API"
    },
    {
      "name": "player",
      "description": "Everything about your Player AUTH API"
    },
    {
      "name": "admin",
      "description": "Everything about your Admin AUTH API"
    },
    {
      "name": "sportKind",
      "description": "Everything about sport kind API"
    },
    {
      "name": "sportVenue",
      "description": "Everything about sport venues management (admin)"
    }
  ],
  "paths": {
    "/device/register": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Register new device to DB",
        "description": "Get new virtual device id when opening app for the first time",
        "operationId": "registerDevice",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/device/delete": {
      "delete": {
        "tags": [
          "device"
        ],
        "summary": "Delete device id from register app",
        "description": "Delete virtual_device_id from DB when app uninstalled",
        "operationId": "deleteDevice",
        "requestBody": {
          "description": "Deleted device_id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDeleteBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/player/auth/register": {
      "post": {
        "tags": [
          "player"
        ],
        "summary": "Register user Player",
        "description": "Register user Player",
        "operationId": "registerPlayer",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRegisterBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/player/auth/login": {
      "post": {
        "tags": [
          "player"
        ],
        "summary": "Login user Player",
        "description": "Login user Player",
        "operationId": "loginPlayer",
        "requestBody": {
          "description": "Login user Player",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerLoginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/player/auth/relogin": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Relogin when opening app again for user Player",
        "description": "Relogin user Player",
        "operationId": "reloginPlayer",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerReloginResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/player/auth/logout": {
      "delete": {
        "tags": [
          "player"
        ],
        "summary": "Logout session user player on used device",
        "description": "Would delete row in Player_Login_Token on device that used",
        "operationId": "logoutPlayer",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerLogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/admin/auth/register": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Register user Admin",
        "description": "Register user Admin",
        "operationId": "registerAdmin",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminRegisterBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminRegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/admin/auth/login": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Login user Admin",
        "description": "Login user Admin",
        "operationId": "loginAdmin",
        "requestBody": {
          "description": "Login user Admin",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/admin/auth/relogin": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Relogin when opening app again for user Admin",
        "description": "Relogin user Admin",
        "operationId": "reloginAdmin",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminReloginResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/admin/auth/logout": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Logout session user admin on used device",
        "description": "Would delete row in Admin_Login_Token on device that used",
        "operationId": "logoutAdmin",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminLogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/admin/sportVenue/register": {
      "post": {
        "tags": [
          "sportVenue"
        ],
        "summary": "Register managed sport venue by admin (1 admin 1 venue)",
        "description": "Register managed sport venue by admin (1 admin 1 venue)",
        "operationId": "registerSportVenue",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminRegisterVenueBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminRegisterVenueResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/admin/sportVenue/edit": {
      "put": {
        "tags": [
          "sportVenue"
        ],
        "summary": "Edit managed sport venue by admin (1 admin 1 venue)",
        "description": "Edit managed sport venue by admin (1 admin 1 venue)",
        "operationId": "EditSportVenue",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Field yang ga mau diedit dikasih nilai null aja",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminEditVenueBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminEditVenueResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/sport_kinds": {
      "get": {
        "tags": [
          "sportKind"
        ],
        "summary": "Return all of sport kinds exists",
        "description": "Return all of sport kinds exists",
        "operationId": "returnSportKinds",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SportKindResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeviceRegisterResponse": {
        "type": "object",
        "properties": {
          "register_status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "virtual_device_id": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "DeviceRegisterResponse"
        }
      },
      "DeviceDeleteBody": {
        "type": "object",
        "properties": {
          "virtual_device_id": {
            "type": "string"
          }
        },
        "xml": {
          "name": "DeviceDeleteBody"
        }
      },
      "DeviceDeleteResponse": {
        "type": "object",
        "properties": {
          "delete_status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "DeviceDeleteResponse"
        }
      },
      "PlayerRegisterBody": {
        "required": [
          "username",
          "password",
          "name"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "devexample"
          },
          "password": {
            "type": "string",
            "example": "examplepass"
          },
          "name": {
            "type": "string",
            "example": "Dev Example"
          }
        },
        "xml": {
          "name": "PlayerRegisterBody"
        }
      },
      "PlayerRegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "register_status": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "PlayerRegisterResponse"
        }
      },
      "PlayerLoginBody": {
        "required": [
          "username",
          "password",
          "virtual_device_id"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "devexample"
          },
          "password": {
            "type": "string",
            "example": "devexample"
          },
          "virtual_device_id": {
            "type": "string",
            "example": "some_device_id"
          }
        },
        "xml": {
          "name": "PlayerLoginBody"
        }
      },
      "PlayerLoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "login_status": {
            "type": "boolean"
          },
          "data": {
            "type":"object",
            "properties": {
              "ava_url": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "PlayerLoginResponse"
        }
      },
      "PlayerReloginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "relogin_status": {
            "type": "boolean"
          },
          "data": {
            "type":"object",
            "properties": {
              "ava_url": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "PlayerReloginResponse"
        }
      },
      "PlayerLogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "logout_status": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "PlayerLogoutResponse"
        }
      },
      "AdminRegisterBody": {
        "required": [
          "username",
          "password",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "devexample"
          },
          "password": {
            "type": "string",
            "example": "examplepass"
          },
          "name": {
            "type": "string",
            "example": "Dev Example"
          },
          "phone": {
            "type": "string",
            "example": "08123456789"
          }
        },
        "xml": {
          "name": "AdminRegisterBody"
        }
      },
      "AdminRegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "register_status": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "AdminRegisterResponse"
        }
      },
      "AdminLoginBody": {
        "required": [
          "username",
          "password",
          "virtual_device_id"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "devexample"
          },
          "password": {
            "type": "string",
            "example": "devexample"
          },
          "virtual_device_id": {
            "type": "string",
            "example": "some_device_id"
          }
        },
        "xml": {
          "name": "AdminLoginBody"
        }
      },
      "AdminLoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "login_status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "ava_url": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "AdminLoginResponse"
        }
      },
      "AdminReloginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "relogin_status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "ava_url": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "AdminReloginResponse"
        }
      },
      "AdminLogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "logout_status": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "AdminLogoutResponse"
        }
      },
      "AdminRegisterVenueBody": {
        "required": [
          "username",
          "Sport_Kind_id",
          "name",
          "geo_coordinate",
          "is_bike_parking",
          "is_car_parking",
          "is_public",
          "description",
          "rules",
          "time_open",
          "time_closed",
          "price_per_hour"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "devexample"
          },
          "sport_kind_uuid": {
            "type": "string",
            "example": "c234176a-d3e0-11ee-921f-02284a7d1cf2"
          },
          "name": {
            "type": "string",
            "example": "Gor Gears"
          },
          "geo_coordinate": {
            "type": "string",
            "example": "-6.300012, 107.164228"
          },
          "is_bike_parking": {
            "type": "boolean",
            "example": true
          },
          "is_car_parking": {
            "type": "boolean",
            "example": true
          },
          "is_public": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "Lapang Badminton dengan 3 lapang yang sudah menggunakan karpet sintetis"
          },
          "rules": {
            "type": "string",
            "example": "Wajib menggunakan sepatu badminton, tidak boleh menggunakan sepatu berdebu"
          },
          "time_open": {
            "type": "string",
            "example": "08:00:00"
          },
          "time_closed": {
            "type": "string",
            "example": "23:00:00"
          },
          "price_per_hour": {
            "type": "integer",
            "example": 40000
          }
        },
        "xml": {
          "name": "AdminRegisterVenueBody"
        }
      },
      "AdminRegisterVenueResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "register_status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type":"string"
              },
              "Sport_Kind_id": {
                "type": "string"
              },
              "Sport_Kind_Name": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "last_edited": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "rules": {
                "type": "string"
              },
              "gro_coordinate": {
                "type": "string"
              },
              "is_bike_parking": {
                "type": "boolean"
              },
              "is_car_parking": {
                "type": "boolean"
              },
              "is_public": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "time_open": {
                "type": "string"
              },
              "time_closed": {
                "type": "string"
              },
              "price_per_hour": {
                "type": "integer"
              }
            }
          }
        },
        "xml": {
          "name": "AdminRegisterVenueResponse"
        }
      },
      "AdminEditVenueBody": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d28aa20b-d982-4b53-b56d-7307a4410339"
          },
          "Sport_Kind_id": {
            "type": "string",
            "example": "2b607252-3c94-432f-9275-a86304363cf3"
          },
          "name": {
            "type": "string",
            "example": "Gor Gears"
          },
          "geo_coordinate": {
            "type": "string",
            "example": null
          },
          "is_bike_parking": {
            "type": "boolean",
            "example": true
          },
          "is_car_parking": {
            "type": "boolean",
            "example": true
          },
          "is_public": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "Lapang Badminton dengan 3 lapang yang sudah menggunakan karpet sintetis"
          },
          "rules": {
            "type": "string",
            "example": "Wajib menggunakan sepatu badminton, tidak boleh menggunakan sepatu berdebu"
          },
          "time_open": {
            "type": "string",
            "example": null
          },
          "time_closed": {
            "type": "string",
            "example": null
          },
          "price_per_hour": {
            "type": "integer",
            "example": 37500
          }
        },
        "xml": {
          "name": "AdminEditVenueBody"
        }
      },
      "AdminEditVenueResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "edit_status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type":"string"
              },
              "Sport_Kind_id": {
                "type": "string"
              },
              "Sport_Kind_Name": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "last_edited": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "rules": {
                "type": "string"
              },
              "gro_coordinate": {
                "type": "string"
              },
              "is_bike_parking": {
                "type": "boolean"
              },
              "is_car_parking": {
                "type": "boolean"
              },
              "is_public": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "time_open": {
                "type": "string"
              },
              "time_closed": {
                "type": "string"
              },
              "price_per_hour": {
                "type": "integer"
              }
            }
          }
        },
        "xml": {
          "name": "AdminEditVenueResponse"
        }
      },
      "SportKindResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status_get": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type":"string"
                },
                "name": {
                  "type":"string"
                }
              }
            }
          }
        },
        "xml": {
          "name": "AdminReloginResponse"
        }
      }
    }
  }
}